# AlertManager Configuration for Neural Tools
# Routes alerts to appropriate channels based on severity

global:
  # Default settings
  resolve_timeout: 5m

  # SMTP configuration (update for your environment)
  smtp_from: 'neural-tools@example.com'
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_auth_username: 'neural-tools@example.com'
  smtp_auth_password: 'your-app-password'

  # Slack configuration
  slack_api_url: '${ALERTMANAGER_SLACK_WEBHOOK}'

# Templates for alert messages
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Alert routing tree
route:
  # Default receiver
  receiver: 'default'

  # Group alerts by these labels
  group_by: ['alertname', 'cluster', 'service']

  # Wait before sending grouped alerts
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h

  # Child routes
  routes:
    # Critical alerts - immediate page
    - match:
        severity: critical
      receiver: 'pagerduty-critical'
      group_wait: 10s
      repeat_interval: 1h
      continue: true

    # ADR-053 sync rate violations
    - match:
        adr: ADR-053
      receiver: 'sync-team'
      group_wait: 1m
      repeat_interval: 30m

    # Database issues
    - match_re:
        service: 'neo4j|qdrant|redis'
      receiver: 'database-team'
      group_interval: 10m

    # Performance warnings
    - match:
        severity: warning
      receiver: 'dev-team'
      group_wait: 10m
      repeat_interval: 2h

# Receiver definitions
receivers:
  # Default receiver - logs only
  - name: 'default'
    webhook_configs:
      - url: 'http://localhost:9094/log'
        send_resolved: true

  # PagerDuty for critical alerts
  - name: 'pagerduty-critical'
    pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        description: 'Neural Tools Critical Alert'
        severity: 'critical'
        client: 'Neural Tools MCP'
        client_url: 'http://localhost:3000'

  # Sync team for ADR-053 violations
  - name: 'sync-team'
    email_configs:
      - to: 'sync-team@example.com'
        headers:
          Subject: 'URGENT: Neo4j-Qdrant Sync Rate Violation'
        html: |
          <h2>Sync Rate Below 95% Threshold</h2>
          <p><b>Alert:</b> {{ .GroupLabels.alertname }}</p>
          <p><b>Description:</b> {{ .CommonAnnotations.description }}</p>
          <p><b>Current Rate:</b> {{ .CommonAnnotations.value }}%</p>
          <p><b>Action Required:</b> {{ .CommonAnnotations.action_required }}</p>
          <p><a href="{{ .CommonAnnotations.runbook_url }}">View Runbook</a></p>
    slack_configs:
      - channel: '#sync-alerts'
        title: 'üö® ADR-053 Sync Rate Violation'
        text: '{{ .CommonAnnotations.summary }}'
        send_resolved: true

  # Database team
  - name: 'database-team'
    slack_configs:
      - channel: '#database-alerts'
        title: 'Database Issue: {{ .GroupLabels.service }}'
        text: '{{ .CommonAnnotations.description }}'
        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'

  # Development team for warnings
  - name: 'dev-team'
    slack_configs:
      - channel: '#dev-alerts'
        title: '‚ö†Ô∏è {{ .GroupLabels.alertname }}'
        text: '{{ .CommonAnnotations.summary }}'
        send_resolved: false

# Inhibition rules - suppress certain alerts when others are firing
inhibit_rules:
  # If a service is down, suppress its high latency alerts
  - source_match:
      alertname: 'ServiceDown'
    target_match:
      alertname: 'HighLatency'
    equal: ['service']

  # If Neo4j is down, suppress sync rate alerts
  - source_match:
      alertname: 'Neo4jConnectionFailure'
    target_match:
      alertname: 'LowSyncRate'

  # If Qdrant is down, suppress sync rate alerts
  - source_match:
      alertname: 'QdrantConnectionFailure'
    target_match:
      alertname: 'LowSyncRate'