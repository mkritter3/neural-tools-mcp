# Prometheus Alert Rules for Neural Tools Production Monitoring
# ADR-053: WriteSynchronizationManager Monitoring

groups:
  - name: neural_tools_sync
    interval: 30s
    rules:
      # Alert when sync rate drops below 95%
      - alert: LowSyncRate
        expr: |
          (
            rate(neural_tools_sync_successful[5m]) /
            rate(neural_tools_sync_total[5m])
          ) * 100 < 95
        for: 5m
        labels:
          severity: warning
          component: WriteSynchronizationManager
          adr: ADR-053
        annotations:
          summary: "Neo4j-Qdrant sync rate below 95% (current: {{ $value }}%)"
          description: |
            The synchronization rate between Neo4j and Qdrant has fallen below the
            required 95% threshold defined in ADR-053.
            Current rate: {{ $value }}%
            This indicates potential data consistency issues.
          runbook_url: "https://github.com/{{ $labels.repo }}/docs/runbooks/sync-rate-low.md"

      # Critical alert when sync rate drops below 80%
      - alert: CriticalSyncRate
        expr: |
          (
            rate(neural_tools_sync_successful[5m]) /
            rate(neural_tools_sync_total[5m])
          ) * 100 < 80
        for: 2m
        labels:
          severity: critical
          component: WriteSynchronizationManager
          adr: ADR-053
          pagerduty: true
        annotations:
          summary: "CRITICAL: Neo4j-Qdrant sync rate below 80% (current: {{ $value }}%)"
          description: |
            CRITICAL: The synchronization rate has fallen below 80%.
            Current rate: {{ $value }}%
            Immediate action required to prevent data inconsistency.
          action_required: |
            1. Check Neo4j and Qdrant service health
            2. Review recent error logs
            3. Consider enabling degraded mode
            4. Notify on-call engineer

      # Alert on high rollback rate
      - alert: HighRollbackRate
        expr: |
          rate(neural_tools_sync_rollbacks[5m]) > 0.1
        for: 5m
        labels:
          severity: warning
          component: WriteSynchronizationManager
        annotations:
          summary: "High rollback rate detected ({{ $value }} rollbacks/sec)"
          description: |
            Excessive rollbacks indicate partial write failures.
            This suggests issues with either Neo4j or Qdrant writes.

      # Alert on sync operation latency
      - alert: HighSyncLatency
        expr: |
          histogram_quantile(0.95,
            rate(neural_tools_sync_duration_seconds_bucket[5m])
          ) > 1.0
        for: 10m
        labels:
          severity: warning
          component: WriteSynchronizationManager
        annotations:
          summary: "Sync operation P95 latency > 1s (current: {{ $value }}s)"
          description: |
            The 95th percentile of sync operations is taking longer than 1 second.
            This may indicate database performance issues.

  - name: neural_tools_services
    interval: 30s
    rules:
      # Neo4j connection failures
      - alert: Neo4jConnectionFailure
        expr: |
          up{job="neo4j"} == 0
        for: 2m
        labels:
          severity: critical
          service: neo4j
        annotations:
          summary: "Neo4j service is down"
          description: "Neo4j has been unavailable for 2 minutes"

      # Qdrant connection failures
      - alert: QdrantConnectionFailure
        expr: |
          up{job="qdrant"} == 0
        for: 2m
        labels:
          severity: critical
          service: qdrant
        annotations:
          summary: "Qdrant service is down"
          description: "Qdrant has been unavailable for 2 minutes"

      # Indexer health check
      - alert: IndexerUnhealthy
        expr: |
          neural_tools_indexer_health == 0
        for: 5m
        labels:
          severity: warning
          service: indexer
        annotations:
          summary: "Neural indexer is unhealthy"
          description: "The indexer health check has been failing for 5 minutes"

      # Queue depth alert
      - alert: HighQueueDepth
        expr: |
          neural_tools_indexer_queue_depth > 1000
        for: 10m
        labels:
          severity: warning
          service: indexer
        annotations:
          summary: "Indexer queue depth exceeds 1000 items"
          description: |
            The indexer queue has {{ $value }} items pending.
            This may indicate processing bottlenecks.

  - name: neural_tools_data_consistency
    interval: 60s
    rules:
      # Detect Neo4j-Qdrant drift
      - alert: DatabaseDrift
        expr: |
          abs(neural_tools_neo4j_chunk_count - neural_tools_qdrant_point_count) > 100
        for: 15m
        labels:
          severity: warning
          component: data_consistency
        annotations:
          summary: "Neo4j and Qdrant chunk counts differ by {{ $value }}"
          description: |
            Detected drift between databases:
            Neo4j chunks: {{ neural_tools_neo4j_chunk_count }}
            Qdrant points: {{ neural_tools_qdrant_point_count }}
            Difference: {{ $value }}

      # Orphaned data detection
      - alert: OrphanedData
        expr: |
          neural_tools_orphaned_chunks > 0
        for: 30m
        labels:
          severity: info
          component: data_consistency
        annotations:
          summary: "{{ $value }} orphaned chunks detected"
          description: |
            Found {{ $value }} chunks in one database but not the other.
            Run recovery process to reconcile.

  - name: neural_tools_performance
    interval: 30s
    rules:
      # High memory usage
      - alert: HighMemoryUsage
        expr: |
          (
            process_resident_memory_bytes{job="neural-tools"} /
            node_memory_MemTotal_bytes
          ) * 100 > 80
        for: 10m
        labels:
          severity: warning
          resource: memory
        annotations:
          summary: "Neural tools using >80% of available memory"
          description: "Memory usage: {{ $value }}%"

      # High CPU usage
      - alert: HighCPUUsage
        expr: |
          rate(process_cpu_seconds_total{job="neural-tools"}[5m]) * 100 > 90
        for: 10m
        labels:
          severity: warning
          resource: cpu
        annotations:
          summary: "Neural tools CPU usage >90%"
          description: "CPU usage: {{ $value }}%"