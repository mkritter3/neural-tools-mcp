# .canon.yaml - Canonical Knowledge Configuration for L9 Neural GraphRAG
# ADR-0031: Canonical Knowledge Management System
version: "1.0"
updated: "2025-09-13"

# Primary sources of truth (highest authority)
primary:
  - path: "CLAUDE.md"
    weight: 1.0
    description: "L9 Truth-First Engineering Contract - Prime directive"

  - pattern: "docs/adr/*.md"
    weight: 0.95
    description: "Architecture Decision Records - Design rationale"

  - pattern: "docs/reference-knowledge/anthropic-official-documentation/03-claude-code/**/*"
    weight: 0.95
    description: "Official Anthropic Claude Code documentation - Latest protocols and standards"

  - pattern: "docs/reference-knowledge/anthropic-official-documentation/04-mcps/**/*"
    weight: 0.95
    description: "Official Anthropic MCP documentation - Protocol specifications and best practices"

  - pattern: "docs/reference-knowledge/anthropic-official-documentation/01-developer-guide/**/*"
    weight: 0.95
    description: "Official Anthropic developer guide - Core development principles"

  - path: ".mcp.json"
    weight: 0.9
    description: "MCP server configuration - Source of truth for connections"
  
  # Example: Add your project's main README as primary source
  # - path: "README.md"
  #   weight: 0.95
  #   description: "Project documentation and setup instructions"

# Secondary sources (high trust but not absolute)
secondary:
  - pattern: "neural-tools/src/servers/services/*.py"
    weight: 0.75
    description: "Core service implementations"
  
  # Example: Add your main application code
  # - pattern: "src/core/**/*.py"
  #   weight: 0.8
  #   description: "Core business logic"
  
  # Example: Add API definitions
  # - pattern: "src/api/routes/*.py"
  #   weight: 0.75
  #   description: "API endpoint definitions"
  
  # Example: Add entire directories
  # - pattern: "src/core/**/*"        # All files in src/core subdirectories (not direct files)
  #   weight: 0.8
  #   description: "Core application directory"
  #
  # To include EVERYTHING in a directory (direct files + all subdirs):
  # - pattern: "src/core/*"           # Direct files in src/core
  #   weight: 0.8
  #   description: "Core files"
  # - pattern: "src/core/**/*"        # All files in subdirectories
  #   weight: 0.8  
  #   description: "Core subdirectories"
  
  # - pattern: "docs/**/*.md"         # All .md files in docs directory
  #   weight: 0.7
  #   description: "Documentation directory"
  
  # - pattern: "src/utils/*"          # Only direct files in src/utils (no subdirs)
  #   weight: 0.65
  #   description: "Utility functions"
    
  - pattern: "neural-tools/src/neural_mcp/*.py"
    weight: 0.7
    description: "MCP server implementation"
    
  - pattern: "neural-tools/src/infrastructure/**/*"
    weight: 0.7
    description: "Infrastructure components (PRISM, RRF) - entire directory"
    
  - path: "docker-compose.yml"
    weight: 0.65
    description: "Container orchestration configuration"

# Reference material (useful but lower priority)
reference:
  - pattern: "scripts/*.py"
    weight: 0.4
    description: "Utility scripts and tools"
    
  - pattern: "tests/**/*.py"
    weight: 0.35
    description: "Test cases showing usage patterns"
    
  - pattern: "examples/*.py"
    weight: 0.3
    description: "Usage examples"

# Deprecated or low-trust sources
deprecated:
  - pattern: "**/deprecated_*.py"
    weight: 0.1
    description: "Deprecated modules - do not use"
    
  - pattern: "**/legacy/**/*"
    weight: 0.05
    description: "Legacy code - for reference only"

# Experimental/volatile code
experimental:
  - pattern: "experiments/**/*"
    weight: 0.2
    volatile: true
    description: "Experimental features - may change"
    
  - pattern: "**/poc_*.py"
    weight: 0.15
    volatile: true
    description: "Proof of concept implementations"

# Authority metadata for inline markers
inline_markers:
  - marker: "@canon"
    weight_boost: 0.3
    description: "Inline canon marker in comments"
    
  - marker: "@authority"
    weight_boost: 0.25
    description: "Authority marker for important code"
    
  - marker: "@source-of-truth"
    weight_boost: 0.35
    description: "Explicit source of truth marker"
    
  - marker: "@deprecated"
    weight_penalty: 0.8
    description: "Inline deprecation marker"
    
  - marker: "@experimental"
    weight_penalty: 0.5
    description: "Inline experimental marker"
    
  - marker: "@legacy"
    weight_penalty: 0.7
    description: "Legacy code marker"

# Foundational knowledge (critical for understanding the system)
foundational:
  # Architecture and system design - highest weight
  - pattern: "docs/adr/*.md"
    weight: 0.95
    description: "Architecture Decision Records - explains WHY we built it this way"
    
  - path: "ARCHITECTURE.md"
    weight: 0.9
    description: "System architecture overview - MUST read before making changes"
    
  # Domain and business knowledge - high weight
  - pattern: "docs/domain/**/*"
    weight: 0.8
    description: "Domain model and business concepts"
    
  # Integration and external dependencies - medium-high weight  
  - pattern: "docs/integrations/**/*"
    weight: 0.75
    description: "How we connect to external systems"
    
  # Learning resources - medium weight
  - pattern: "docs/guides/**/*.md"
    weight: 0.65
    description: "Implementation guides and best practices"
    
  - pattern: "examples/**/*"
    weight: 0.6
    description: "Reference implementations and patterns"
    
  # Background material - lower weight
  - pattern: "docs/research/**/*"
    weight: 0.45
    description: "Research and background material"

# Special patterns for this project
special:
  - pattern: "neural-tools/src/servers/services/indexer_service.py"
    weight: 0.85
    description: "Core indexer with all optimizations - critical component"
    
  - pattern: "neural-tools/src/servers/services/service_container.py"
    weight: 0.8
    description: "Service orchestration - connection management"
    
  - path: "neural-tools/src/infrastructure/prism_scorer.py"
    weight: 0.8
    description: "PRISM scoring algorithm - intelligent file importance"