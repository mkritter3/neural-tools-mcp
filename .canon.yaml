# .canon.yaml - User-defined source of truth for claude-l9-template
# September 2025 Standards - ADR-0076

canonical_sources:
  documentation:
    weight: 1.0
    patterns: ["README.md", "docs/**/*.md", "*.md", "CLAUDE.md"]
    trust_level: "high"
    description: "Primary documentation and specifications"

  configuration:
    weight: 0.9
    patterns: ["*.config.js", "package.json", "pyproject.toml", "CLAUDE.md", ".mcp.json", "docker-compose.yml"]
    trust_level: "high"
    description: "Project configuration and build files"

  architecture_decisions:
    weight: 0.95
    patterns: ["docs/adr/*.md"]
    trust_level: "high"
    description: "Architecture Decision Records - critical design decisions"

  implementation:
    weight: 0.7
    patterns: ["src/**/*.py", "lib/**/*.js", "neural-tools/**/*.py"]
    trust_level: "medium"
    description: "Core implementation files"

  scripts:
    weight: 0.8
    patterns: ["scripts/*.sh", "ci/*.py"]
    trust_level: "medium"
    description: "Deployment and operational scripts"

  tests:
    weight: 0.6
    patterns: ["test/**/*", "spec/**/*", "**/test_*.py", "tests/**/*"]
    trust_level: "medium"
    description: "Test files and specifications"

  legacy:
    weight: 0.2
    patterns: ["legacy/**/*", "deprecated/**/*", "old/**/*"]
    trust_level: "low"
    description: "Legacy code marked for deprecation"

# User-specific importance overrides
user_overrides:
  "CLAUDE.md": 1.0                               # Critical project instructions
  "docs/adr/*.md": 0.95                         # Architecture decisions
  "neural-tools/src/neural_mcp/neural_server_stdio.py": 0.9  # Core MCP server
  "neural-tools/src/servers/services/neo4j_service.py": 0.9  # Core service
  "scripts/deploy-to-global-mcp.sh": 0.85       # Critical deployment script
  "docker-compose.yml": 0.8                     # Infrastructure definition
  "pyproject.toml": 0.8                         # Python project configuration
  ".mcp.json": 0.8                             # MCP configuration
  "legacy/**/*": 0.1                           # Deprecate legacy code
  "test_*.py": 0.8                             # Important test patterns
  "*.test.js": 0.7                             # JavaScript tests

# Microsoft GraphRAG 2025 community clustering configuration
community_clustering:
  enabled: true
  algorithm: "leiden"                           # Microsoft GraphRAG standard
  min_cluster_size: 3
  resolution: 1.0
  max_cluster_size: 50

# Metadata tracking configuration
metadata_tracking:
  recency_decay: 0.95                          # Weight recent changes higher
  complexity_threshold: 100                    # Lines of code complexity scoring
  git_commit_weight: 0.8                       # Recent commits indicate importance
  dependency_weight: 0.9                       # High-dependency files are important
  todo_penalty: 0.1                           # TODOs reduce canonical weight
  fixme_penalty: 0.2                          # FIXMEs reduce canonical weight more

# Project-specific canonical knowledge rules
project_rules:
  # L9 Neural GraphRAG specific patterns
  critical_components:
    - "neural-tools/src/neural_mcp/"           # Core MCP implementation
    - "docs/adr/"                              # Architecture decisions
    - "scripts/"                               # Operational scripts
    - "CLAUDE.md"                              # Project instructions

  # Patterns that indicate high importance
  importance_indicators:
    - contains: "class.*Service"               # Service classes
      weight_boost: 0.1
    - contains: "ADR-"                         # Architecture decisions
      weight_boost: 0.2
    - contains: "async def.*_impl"             # MCP tool implementations
      weight_boost: 0.1
    - filename_pattern: "*server*.py"         # Server implementations
      weight_boost: 0.1

  # Patterns that indicate low importance
  deprecation_indicators:
    - contains: "# TODO: remove"
      weight_penalty: 0.3
    - contains: "# DEPRECATED"
      weight_penalty: 0.5
    - filename_pattern: "*_old.*"
      weight_penalty: 0.4
    - filename_pattern: "*_backup.*"
      weight_penalty: 0.5

# Integration settings
integration:
  neo4j_sync: true                             # Sync weights to Neo4j canon_weight property
  auto_update: true                            # Auto-update weights when files change
  cache_duration: 3600                         # Cache canon weights for 1 hour
  batch_size: 100                             # Process files in batches