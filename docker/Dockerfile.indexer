# Neural Indexer Sidecar Container - Production Ready
# Optimized for neural search requirements

FROM python:3.11-slim as runtime

# Install system dependencies and security updates
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    curl \
    build-essential \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user for security with home directory
RUN groupadd -g 1000 indexer && \
    useradd -u 1000 -g indexer -m -d /home/indexer indexer && \
    mkdir -p /home/indexer && \
    chown -R indexer:indexer /home/indexer

WORKDIR /app

# Copy and install lean requirements (NO ML dependencies)
COPY neural-tools/config/requirements-indexer-lean.txt ./requirements.txt

# Install Python dependencies with cache mount
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir fastapi uvicorn[standard] prometheus-client

# Copy source code with cache busting
# ADR-0093: Fixed tree-sitter and relationship storage
ARG CACHE_BUST=1
COPY neural-tools/src/ ./src/

# Validate tree-sitter parsers work in container
RUN python -c "import tree_sitter_python as tsp; from tree_sitter import Language, Parser; \
    lang = Language(tsp.language()); parser = Parser(lang); \
    print('✅ Tree-sitter Python parser OK')" && \
    python -c "import tree_sitter_javascript as tsjs; from tree_sitter import Language, Parser; \
    lang = Language(tsjs.language()); parser = Parser(lang); \
    print('✅ Tree-sitter JavaScript parser OK')"

# Create directories with proper ownership
RUN mkdir -p /app/state /app/logs /app/tmp /app/config && \
    chown -R indexer:indexer /app

# Health check script (will be created in Phase 4)
COPY docker/scripts/indexer-entrypoint.py ./entrypoint.py
RUN chmod +x ./entrypoint.py

USER indexer:indexer

# Expose health/metrics port
EXPOSE 8080

# Set environment variables
ENV PYTHONPATH=/app:/app/src
ENV PYTHONUNBUFFERED=1
ENV TOKENIZERS_PARALLELISM=false

# Path mapping environment variables (ADR-0086)
ENV HOST_PROJECT_PATH=/Users/mkr/local-coding/claude-l9-template
ENV CONTAINER_PROJECT_PATH=/workspace

# Health check
HEALTHCHECK --interval=30s --timeout=10s --retries=3 --start-period=60s \
    CMD curl -f http://localhost:8080/health || exit 1

# Entry point with graceful shutdown handling
# No CMD - the entrypoint auto-detects project from mount (ADR-0028)
ENTRYPOINT ["python", "./entrypoint.py"]