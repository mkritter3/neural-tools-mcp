FROM python:3.12-slim

# L9 Complete System - WITH models, embeddings, and full functionality
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install ALL L9 requirements including models
COPY requirements/requirements-l9.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements-l9.txt && \
    pip install --no-cache-dir \
    sentence-transformers \
    torch --index-url https://download.pytorch.org/whl/cpu

# Download the actual embedding model we need
RUN python -c "from sentence_transformers import SentenceTransformer; \
    model = SentenceTransformer('sentence-transformers/all-MiniLM-L6-v2'); \
    model.save('/app/models/all-MiniLM-L6-v2')"

# Copy the complete neural system
COPY .claude/neural-system /app/neural-system
COPY .claude/chroma /app/data/chroma
COPY .claude/onnx_models /app/data/onnx_models

# Set up proper environment for L9
ENV NEURAL_L9_MODE=1 \
    USE_SINGLE_QODO_MODEL=1 \
    ENABLE_AUTO_SAFETY=1 \
    L9_PROTECTION_LEVEL=maximum \
    PYTHONPATH=/app/neural-system:/app \
    SENTENCE_TRANSFORMERS_HOME=/app/models \
    TRANSFORMERS_CACHE=/app/models \
    HF_HOME=/app/models \
    PYTHONUNBUFFERED=1

# Create entrypoint that ensures everything works
RUN echo '#!/bin/bash\n\
echo "ðŸš€ Starting L9 Neural Flow System..."\n\
echo "âœ… Models available at: /app/models"\n\
echo "âœ… Neural system at: /app/neural-system"\n\
echo "âœ… Data at: /app/data"\n\
python3 /app/neural-system/mcp_neural_server.py\n\
' > /app/entrypoint.sh && chmod +x /app/entrypoint.sh

ENTRYPOINT ["/app/entrypoint.sh"]