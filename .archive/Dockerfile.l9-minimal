# L9 Enhanced MCP Server - Neo4j Production Version
# Features: Neo4j GraphRAG + Tree-sitter + Qdrant (without heavy ML dependencies)
# Strategy: Fast core build, use separate Nomic Embed service for ML

FROM python:3.11-slim as base

# System dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install enhanced Python dependencies with cache optimization
COPY requirements-l9-enhanced.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --no-cache-dir -r requirements-l9-enhanced.txt

# Copy enhanced MCP server with Neo4j GraphRAG
COPY neural-mcp-server-enhanced.py .
COPY neo4j_client.py .
COPY tree_sitter_ast.py .

# Create required directories
RUN mkdir -p /app/data /app/neo4j-workspace /app/models

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV L9_VERSION=minimal-core-2025

# Minimal configuration - use external embedding service
ENV USE_EXTERNAL_EMBEDDING=true
ENV EMBEDDING_SERVICE_HOST=neural-embeddings
ENV EMBEDDING_SERVICE_PORT=8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import sys; import fastmcp; import neo4j; sys.exit(0)"

# Run the enhanced MCP server
CMD ["python", "neural-mcp-server-enhanced.py"]