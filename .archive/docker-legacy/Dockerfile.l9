FROM python:3.12-slim

# L9 Production Container - Complete self-contained system
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    git \
    gcc \
    g++ \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy and install ALL requirements
COPY requirements/requirements-l9.txt /tmp/
RUN pip install --no-cache-dir -r /tmp/requirements-l9.txt

# Install additional dependencies that might be needed
RUN pip install --no-cache-dir \
    transformers \
    torch --index-url https://download.pytorch.org/whl/cpu \
    tokenizers

# Copy the complete neural system with all files
COPY .claude/neural-system /app/neural-system
COPY .claude/chroma /app/data/chroma
COPY .claude/onnx_models /app/data/onnx_models

# Create proper directory structure
RUN mkdir -p /app/models /app/data/benchmarks /app/logs

# Set comprehensive environment for L9
ENV NEURAL_L9_MODE=1 \
    USE_SINGLE_QODO_MODEL=1 \
    ENABLE_AUTO_SAFETY=1 \
    L9_PROTECTION_LEVEL=maximum \
    PYTHONPATH=/app/neural-system:/app \
    PYTHONUNBUFFERED=1 \
    TRANSFORMERS_CACHE=/app/models \
    HF_HOME=/app/models \
    TOKENIZERS_PARALLELISM=false

# Health check to ensure container is working
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD python3 -c "import mcp; import chromadb; import tiktoken; print('OK')" || exit 1

# Run MCP server
CMD ["python3", "/app/neural-system/mcp_neural_server.py"]