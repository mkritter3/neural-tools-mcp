name: Docker E2E Tests
# End-to-end testing with production containers

on:
  workflow_call:
    inputs:
      test-timeout:
        description: 'Test timeout in seconds'
        type: number
        default: 300
    outputs:
      status:
        description: 'E2E test status'
        value: ${{ jobs.e2e.outputs.status }}

jobs:
  e2e:
    name: Docker E2E Tests
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.result.outputs.status }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build indexer container (fresh build)
        run: |
          echo "üöÄ Building fresh Docker image without cache to include latest fixes..."
          docker build --no-cache -f docker/Dockerfile.indexer \
            -t l9-neural-indexer:ci-test \
            .

      - name: Start services
        run: |
          docker-compose up -d
          echo "Waiting for services to be ready..."
          sleep 30

      - name: Check service health
        run: |
          docker ps -a
          docker-compose logs --tail=20

      - name: Run E2E test suite
        id: e2e-test
        timeout-minutes: ${{ fromJSON(inputs.test-timeout) / 60 }}
        run: |
          # Tag for testing
          docker tag l9-neural-indexer:ci-test l9-neural-indexer:production

          # Run E2E tests
          if ./scripts/test-neural-indexer-e2e.sh; then
            echo "e2e_status=success" >> $GITHUB_ENV
          else
            echo "e2e_status=failure" >> $GITHUB_ENV

            # Capture logs on failure
            docker-compose logs --tail=50 > e2e-failure.log
            echo "E2E tests failed. Logs captured in e2e-failure.log"
          fi

      - name: Upload failure logs
        if: env.e2e_status == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: e2e-failure-logs
          path: e2e-failure.log
          retention-days: 7

      - name: Cleanup
        if: always()
        run: |
          docker-compose down -v
          docker system prune -f

      - name: Set output status
        id: result
        run: |
          if [[ "${{ env.e2e_status }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
            echo "‚úÖ E2E tests passed"
          else
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "‚ùå E2E tests failed"
            exit 1
          fi